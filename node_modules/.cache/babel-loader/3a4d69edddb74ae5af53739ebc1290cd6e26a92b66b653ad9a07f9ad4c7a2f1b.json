{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n// Se importan los tatos de forma local en caso de falla de la api o falla de la Base de Datos\nimport motorcycle from \"@/data/motorcycle.json\";\nexport default {\n  setup() {\n    return {\n      stores: [],\n      where: \"\",\n      search: \"\",\n      aftersearch: [],\n      findstore: true,\n      noresults: false,\n      amountresults: null\n    };\n  },\n  created() {\n    //  Se llama a la función getStores() para solicitar los datos legítimos de las tiendas de la base de datos\n    this.getStores();\n  },\n  methods: {\n    //  Función getStores(), solicita los datos a la API de todas las tiendas de la base de datos.\n    getStores() {\n      //  Se inicializa la variable 'stores' con una copia local de las tiendas de la base de datos, por si fallase en algún momento la conexión con la API o con la base de datos\n      this.stores = motorcycle;\n      fetch(\"http://localhost:8081/api/stores\").then(r => r.json()).then(j => {\n        this.stores = [];\n        this.stores = j;\n      }).catch(function (error) {\n        console.log(error);\n      });\n    },\n    //  Función newsearch(), recorrera en base a la búsqueda realizada, los datos 'stores' proporcionados por la api en busca de coincidencias en las columnas: Comunidad y Nombre_dealer...\n    //  NOTA:('Se ha agregado la columna CP. Solo se ha agregado para poder realizar la búsqueda por Código Postal a modo extra, creía recomendable separar el CP en la base de datos y filtrar por CP')\n    newsearch() {\n      // Se reasigna search a search sustituyendo todo el contenido por mayusculas y se reinicializa la variable 'aftersearch' con un array vacio '[ ]'\n      this.search = this.search.toUpperCase();\n      this.aftersearch = [];\n      //  Se recorre Stores\n      for (let i = 0; i < this.stores.length; i++) {\n        if (this.stores[i].Comunidad.toUpperCase().includes(this.search) || this.stores[i].Nombre_dealer.toUpperCase().includes(this.search) || this.stores[i].CP.toUpperCase().includes(this.search)) {\n          //  Se introduce en cada vuelta del for los datos de cada tienda que cumpla la anterior condición\n          this.aftersearch.push(this.stores[i]);\n        }\n      }\n      //  Si la cantidad de tiendas que alberga la búsqueda es menor a 1 se asigna true a la variable 'noresults', activar 'noresults' proporciona la ventaja de saber si hay o no resultados\n      if (this.aftersearch.length < 1) {\n        this.noresults = true;\n      }\n      //  De lo contrario se asigna false a la variable 'noresults', se guarda la cantidad de resultados en 'amountresults' y se asigna false a la variable 'findstore', para poder ocultar el banner de búsqueda.\n      else {\n        this.noresults = false;\n        this.amountresults = this.aftersearch.length;\n        this.findstore = false;\n      }\n    },\n    //  Función maprute(), recibirá como parametro el contenido de la ubicación de la tienda que ha sido seleccionada y tratará dicha información para obtener como resultado la ruta dinámica a introducir en el iframe de GoogleMaps\n    maprute(whereis) {\n      //  Se vacia la variable 'where' y se crea una constante  'newreplace'  con un array vacio\n      this.where = \"\";\n      const newreplace = [];\n      //  Se recorre la ubicación proporcionada con el motivo de encontrar los espacios del string y sustituirlos por '%20' y por cada vuelta se irá alojando en 'newreplace' el contenido a transformar a posterior\n      for (let i = 0; i < whereis.length; i++) {\n        newreplace.push(whereis[i].replace(\" \", \"%20\"));\n      }\n      // Se transforma el array en un string con el uso de join: une todos los elementos de una matriz en una cadena de texto y devuelve esa cadena para asignarla a una variable a ser utilizada\n      this.where = newreplace.join(\"\");\n    }\n  }\n};","map":{"version":3,"names":["motorcycle","setup","stores","where","search","aftersearch","findstore","noresults","amountresults","created","getStores","methods","fetch","then","r","json","j","catch","error","console","log","newsearch","toUpperCase","i","length","Comunidad","includes","Nombre_dealer","CP","push","maprute","whereis","newreplace","replace","join"],"sources":["/home/aritz/Descargas/EXAMEN_CANDIDATOS_Aritz Robledo/frontend/src/components/ListLocations.vue"],"sourcesContent":["<template>\r\n  <section style=\"background-color: #e4e4e4; width: 100%; padding-top: 15em\">\r\n    <!--wireframe: Encuentra tu tienda-->\r\n    <article\r\n      style=\"\r\n        align-items: center;\r\n        display: flex;\r\n        margin-right: auto;\r\n        margin-left: auto;\r\n        position: relative;\r\n      \"\r\n      class=\"row p-2 shadow-sm\"\r\n    >\r\n      <div class=\"col-2\" />\r\n      <section style=\"text-align: left\" class=\"col-4 p-4\">\r\n        <article>\r\n          <h3 style=\"color: #6297b7\" class=\"mb-3\">\r\n            <b>Encuentra tu tienda</b>\r\n          </h3>\r\n        </article>\r\n        <article class=\"mb-4 text-body-secondary\">\r\n          <b>Localiza tu concesionario más cercano</b>\r\n        </article>\r\n        <article>\r\n          <p class=\"card-text mb-4\" style=\"color: #727272\">\r\n            Introduce tu dirección o, simplemente tu código postal, y encuentra\r\n            tu concesionario más cercano.\r\n          </p>\r\n        </article>\r\n        <article>\r\n          <input\r\n            v-on:keyup.enter=\"newsearch()\"\r\n            v-model=\"search\"\r\n            class=\"mb-3\"\r\n            style=\"\r\n              margin-left: 0.01em;\r\n              padding-left: 1em;\r\n              width: 25em;\r\n              border: 0.1em solid #6297b7;\r\n              border-radius: 0.25em;\r\n            \"\r\n          />\r\n        </article>\r\n        <article>\r\n          <p class=\"card-text mb-4\">\r\n            <img\r\n              style=\"width: 1em; margin-right: 0.2em\"\r\n              src=\"/ubicacion_Arena.svg\"\r\n            /><span style=\"border-bottom: 0.1em solid #6297b7\"\r\n              >Utilizar ubicación actual</span\r\n            >\r\n          </p>\r\n        </article>\r\n        <article v-show=\"noresults === true\">\r\n          <p>Lo sentimos no encontramos resultados.</p>\r\n        </article>\r\n        <a style=\"text-decoration: none; color: white\" href=\"#\"\r\n          ><button\r\n            @click=\"newsearch()\"\r\n            class=\"mb-5\"\r\n            style=\"\r\n              width: 13em;\r\n              background-color: #6297b7;\r\n              color: white;\r\n              font-size: 0.9em;\r\n              border-radius: 0.25em;\r\n              border: none;\r\n              text-align: center;\r\n              padding: 0.25em;\r\n            \"\r\n          >\r\n            <b>ENCUENTRA TU TIENDA</b>\r\n          </button></a\r\n        >\r\n      </section>\r\n      <section style=\"text-align: left\" class=\"col-4 d-none d-lg-block\">\r\n        <img\r\n          style=\"width: 75%\"\r\n          class=\"bd-placeholder-img\"\r\n          src=\"/imag_tiendas_ubi_2.png\"\r\n        />\r\n      </section>\r\n      <div class=\"col-2\" />\r\n    </article>\r\n    <!--Fin de wireframe: Encuentra tu tienda-->\r\n    <!--After the search wireframe-->\r\n    <article\r\n      v-show=\"findstore === false\"\r\n      style=\"\r\n        background-color: #e4e4e4;\r\n        align-items: center;\r\n        display: flex;\r\n        margin-right: auto;\r\n        margin-left: auto;\r\n        position: relative;\r\n      \"\r\n      class=\"row roundedshadow-sm\"\r\n    >\r\n      <div class=\"col-2\" />\r\n      <section style=\"text-align: left\" class=\"col-5 p-4\">\r\n        <h4 style=\"color: #6297b7; width: 80%\" class=\"mb-3\">\r\n          <b v-if=\"amountresults > 1\"\r\n            >Se han encontrado {{ amountresults }} concesionarios cerca de tu\r\n            ubicación actual</b\r\n          ><b v-if=\"amountresults === 1\"\r\n            >Se ha encontrado 1 concesionario cerca de tu ubicación actual</b\r\n          >\r\n        </h4>\r\n        <div\r\n          style=\"text-transform: capitalize\"\r\n          class=\"mb-4 text-body-secondary\"\r\n        >\r\n          <b style=\"font-size: 0.8em\">{{ search }}</b>\r\n        </div>\r\n        <div>\r\n          <article v-for=\"stores in aftersearch\" :key=\"stores.id\">\r\n            <section\r\n              v-if=\"\r\n                stores.Estado === 'ACTIVO' &&\r\n                stores.Empresa.includes('ARENA') &&\r\n                stores.Condición === 'Tienda'\r\n              \"\r\n            >\r\n              <a style=\"text-decoration: none; color: white\" href=\"#\">\r\n                <button\r\n                  class=\"row mb-4\"\r\n                  style=\"border: none; background: none; text-align: left\"\r\n                  @click=\"maprute(stores.Ubicación)\"\r\n                >\r\n                  <article style=\"margin-top: 1em\" class=\"col-1 fs-4\">\r\n                    <img style=\"width: 1em\" src=\"/ubicacion_Arena.svg\" />\r\n                  </article>\r\n                  <article style=\"width: 20em\" class=\"col\">\r\n                    <div\r\n                      style=\"font-size: 0.9em\"\r\n                      class=\"mb-1 text-body-secondary\"\r\n                    >\r\n                      <b>{{ stores.Nombre_dealer }}</b>\r\n                    </div>\r\n                    <div\r\n                      style=\"font-size: 0.9em\"\r\n                      class=\"mb-1 text-body-secondary\"\r\n                    >\r\n                      {{ stores.Ubicación }}\r\n                    </div>\r\n                    <div style=\"font-size: 0.9em; color: #6297b7\" class=\"mb-1\">\r\n                      {{ stores.Teléfono }}\r\n                    </div>\r\n                    <div class=\"dropdown-center mb-4\">\r\n                      <button\r\n                        style=\"background: none; border: none\"\r\n                        class=\"text-body-secondary dropdown-toggle\"\r\n                        type=\"button\"\r\n                        data-bs-toggle=\"dropdown\"\r\n                        aria-expanded=\"false\"\r\n                      >\r\n                        Horarios\r\n                      </button>\r\n                      <section\r\n                        style=\"background: none; border: none\"\r\n                        class=\"dropdown-menu\"\r\n                      >\r\n                        <article>\r\n                          <div class=\"dropdown-item\">{{ stores.Horarios }}</div>\r\n                        </article>\r\n                      </section>\r\n                    </div>\r\n                  </article>\r\n                </button>\r\n              </a>\r\n            </section>\r\n          </article>\r\n        </div>\r\n      </section>\r\n      <section class=\"col-5\">\r\n        <article style=\"width: 80%\">\r\n          <iframe\r\n            scrolling=\"no\"\r\n            marginheight=\"0\"\r\n            marginwidth=\"0\"\r\n            :src=\"\r\n              'https://maps.google.com/maps?width=100%25&amp;height=400&amp;hl=es&amp;q=' +\r\n              where +\r\n              '&amp;t=&amp;z=14&amp;ie=UTF8&amp;iwloc=B&amp;output=embed'\r\n            \"\r\n            width=\"100%\"\r\n            height=\"400\"\r\n            frameborder=\"0\"\r\n            ><a href=\"https://www.gps.ie/car-satnav-gps/\"></a\r\n          ></iframe>\r\n        </article>\r\n      </section>\r\n      <div class=\"col-2\" />\r\n    </article>\r\n    <!--Fin de wireframe: After the search-->\r\n  </section>\r\n</template>\r\n<script>\r\n// Se importan los tatos de forma local en caso de falla de la api o falla de la Base de Datos\r\nimport motorcycle from \"@/data/motorcycle.json\";\r\nexport default {\r\n  setup() {\r\n    return {\r\n      stores: [],\r\n      where: \"\",\r\n      search: \"\",\r\n      aftersearch: [],\r\n      findstore: true,\r\n      noresults: false,\r\n      amountresults: null,\r\n    };\r\n  },\r\n  created() {\r\n    //  Se llama a la función getStores() para solicitar los datos legítimos de las tiendas de la base de datos\r\n    this.getStores();\r\n  },\r\n  methods: {\r\n    //  Función getStores(), solicita los datos a la API de todas las tiendas de la base de datos.\r\n    getStores() {\r\n      //  Se inicializa la variable 'stores' con una copia local de las tiendas de la base de datos, por si fallase en algún momento la conexión con la API o con la base de datos\r\n      this.stores = motorcycle;\r\n      fetch(\"http://localhost:8081/api/stores\")\r\n        .then((r) => r.json())\r\n        .then((j) => {\r\n          this.stores = [];\r\n          this.stores = j;\r\n        })\r\n        .catch(function (error) {\r\n          console.log(error);\r\n        });\r\n    },\r\n    //  Función newsearch(), recorrera en base a la búsqueda realizada, los datos 'stores' proporcionados por la api en busca de coincidencias en las columnas: Comunidad y Nombre_dealer...\r\n    //  NOTA:('Se ha agregado la columna CP. Solo se ha agregado para poder realizar la búsqueda por Código Postal a modo extra, creía recomendable separar el CP en la base de datos y filtrar por CP')\r\n    newsearch() {\r\n      // Se reasigna search a search sustituyendo todo el contenido por mayusculas y se reinicializa la variable 'aftersearch' con un array vacio '[ ]'\r\n      this.search = this.search.toUpperCase();\r\n      this.aftersearch = [];\r\n      //  Se recorre Stores\r\n      for (let i = 0; i < this.stores.length; i++) {\r\n        if (\r\n          this.stores[i].Comunidad.toUpperCase().includes(this.search) ||\r\n          this.stores[i].Nombre_dealer.toUpperCase().includes(this.search) ||\r\n          this.stores[i].CP.toUpperCase().includes(this.search)\r\n        ) {\r\n          //  Se introduce en cada vuelta del for los datos de cada tienda que cumpla la anterior condición\r\n          this.aftersearch.push(this.stores[i]);\r\n        }\r\n      }\r\n      //  Si la cantidad de tiendas que alberga la búsqueda es menor a 1 se asigna true a la variable 'noresults', activar 'noresults' proporciona la ventaja de saber si hay o no resultados\r\n      if (this.aftersearch.length < 1) {\r\n        this.noresults = true;\r\n      }\r\n      //  De lo contrario se asigna false a la variable 'noresults', se guarda la cantidad de resultados en 'amountresults' y se asigna false a la variable 'findstore', para poder ocultar el banner de búsqueda.\r\n      else {\r\n        this.noresults = false;\r\n        this.amountresults = this.aftersearch.length;\r\n        this.findstore = false;\r\n      }\r\n    },\r\n    //  Función maprute(), recibirá como parametro el contenido de la ubicación de la tienda que ha sido seleccionada y tratará dicha información para obtener como resultado la ruta dinámica a introducir en el iframe de GoogleMaps\r\n    maprute(whereis) {\r\n      //  Se vacia la variable 'where' y se crea una constante  'newreplace'  con un array vacio\r\n      this.where = \"\";\r\n      const newreplace = [];\r\n      //  Se recorre la ubicación proporcionada con el motivo de encontrar los espacios del string y sustituirlos por '%20' y por cada vuelta se irá alojando en 'newreplace' el contenido a transformar a posterior\r\n      for (let i = 0; i < whereis.length; i++) {\r\n        newreplace.push(whereis[i].replace(\" \", \"%20\"));\r\n      }\r\n      // Se transforma el array en un string con el uso de join: une todos los elementos de una matriz en una cadena de texto y devuelve esa cadena para asignarla a una variable a ser utilizada\r\n      this.where = newreplace.join(\"\");\r\n    },\r\n  },\r\n};\r\n</script>\r\n<style scoped>\r\n.dropdown-item {\r\n  font-size: 1em;\r\n  padding-left: 6em;\r\n  margin-top: -1em;\r\n  margin-bottom: 2em;\r\n}\r\n.dropdown-item:hover {\r\n  background: none;\r\n}\r\n</style>\r\n"],"mappings":";AAsMA;AACA,OAAOA,UAAS,MAAO,wBAAwB;AAC/C,eAAe;EACbC,KAAKA,CAAA,EAAG;IACN,OAAO;MACLC,MAAM,EAAE,EAAE;MACVC,KAAK,EAAE,EAAE;MACTC,MAAM,EAAE,EAAE;MACVC,WAAW,EAAE,EAAE;MACfC,SAAS,EAAE,IAAI;MACfC,SAAS,EAAE,KAAK;MAChBC,aAAa,EAAE;IACjB,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR;IACA,IAAI,CAACC,SAAS,EAAE;EAClB,CAAC;EACDC,OAAO,EAAE;IACP;IACAD,SAASA,CAAA,EAAG;MACV;MACA,IAAI,CAACR,MAAK,GAAIF,UAAU;MACxBY,KAAK,CAAC,kCAAkC,EACrCC,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACC,IAAI,EAAE,EACpBF,IAAI,CAAEG,CAAC,IAAK;QACX,IAAI,CAACd,MAAK,GAAI,EAAE;QAChB,IAAI,CAACA,MAAK,GAAIc,CAAC;MACjB,CAAC,EACAC,KAAK,CAAC,UAAUC,KAAK,EAAE;QACtBC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MACpB,CAAC,CAAC;IACN,CAAC;IACD;IACA;IACAG,SAASA,CAAA,EAAG;MACV;MACA,IAAI,CAACjB,MAAK,GAAI,IAAI,CAACA,MAAM,CAACkB,WAAW,EAAE;MACvC,IAAI,CAACjB,WAAU,GAAI,EAAE;MACrB;MACA,KAAK,IAAIkB,CAAA,GAAI,CAAC,EAAEA,CAAA,GAAI,IAAI,CAACrB,MAAM,CAACsB,MAAM,EAAED,CAAC,EAAE,EAAE;QAC3C,IACE,IAAI,CAACrB,MAAM,CAACqB,CAAC,CAAC,CAACE,SAAS,CAACH,WAAW,EAAE,CAACI,QAAQ,CAAC,IAAI,CAACtB,MAAM,KAC3D,IAAI,CAACF,MAAM,CAACqB,CAAC,CAAC,CAACI,aAAa,CAACL,WAAW,EAAE,CAACI,QAAQ,CAAC,IAAI,CAACtB,MAAM,KAC/D,IAAI,CAACF,MAAM,CAACqB,CAAC,CAAC,CAACK,EAAE,CAACN,WAAW,EAAE,CAACI,QAAQ,CAAC,IAAI,CAACtB,MAAM,GACpD;UACA;UACA,IAAI,CAACC,WAAW,CAACwB,IAAI,CAAC,IAAI,CAAC3B,MAAM,CAACqB,CAAC,CAAC,CAAC;QACvC;MACF;MACA;MACA,IAAI,IAAI,CAAClB,WAAW,CAACmB,MAAK,GAAI,CAAC,EAAE;QAC/B,IAAI,CAACjB,SAAQ,GAAI,IAAI;MACvB;MACA;MAAA,KACK;QACH,IAAI,CAACA,SAAQ,GAAI,KAAK;QACtB,IAAI,CAACC,aAAY,GAAI,IAAI,CAACH,WAAW,CAACmB,MAAM;QAC5C,IAAI,CAAClB,SAAQ,GAAI,KAAK;MACxB;IACF,CAAC;IACD;IACAwB,OAAOA,CAACC,OAAO,EAAE;MACf;MACA,IAAI,CAAC5B,KAAI,GAAI,EAAE;MACf,MAAM6B,UAAS,GAAI,EAAE;MACrB;MACA,KAAK,IAAIT,CAAA,GAAI,CAAC,EAAEA,CAAA,GAAIQ,OAAO,CAACP,MAAM,EAAED,CAAC,EAAE,EAAE;QACvCS,UAAU,CAACH,IAAI,CAACE,OAAO,CAACR,CAAC,CAAC,CAACU,OAAO,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;MACjD;MACA;MACA,IAAI,CAAC9B,KAAI,GAAI6B,UAAU,CAACE,IAAI,CAAC,EAAE,CAAC;IAClC;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}